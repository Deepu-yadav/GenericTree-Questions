public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/

		public static TreeNode<Integer> maxSumNode(TreeNode<Integer> root) {
		if (root == null)
			return null;
		TreeNode<Integer> result = root;
		int maxSum = sumNode(root);// calculate sum of node for root node
		int childCount = root.children.size();
		for (int i = 0; i < childCount; i++) {
			TreeNode<Integer> temp = maxSumNode(root.children.get(i));
			int sum = sumNode(temp);
			if (sum > maxSum) {
				maxSum = sum;
				result = temp;
			}
		}
		return result;
	}

	public static int sumNode(TreeNode<Integer> root) {
		// called by mansumNode
		if (root == null)
			return 0;
		int sum = root.data;
		int childCount = root.children.size();
		for (int i = 0; i < childCount; i++) {
			TreeNode<Integer> temp = root.children.get(i);
			sum += temp.data;
		}
		return sum;
	}		
}
