




import java.util.LinkedList;
import java.util.Queue;
public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	

	public static void printLevelWise(TreeNode<Integer> root){
		/* Your class should be named Solution 
 		 * Don't write main(). 
		 * Don't read input, it is passed as function argument. 
		 * Print output and don't return it. 
		 * Taking input is handled automatically. 
		 */
		 if(root==null){
			 return;
		 }
      
	  Queue<TreeNode<Integer>> q=new LinkedList<>();
	  q.add(root);
	  System.out.println(root.data);
	  int length=1;

	  while(q.size()>0){
		     TreeNode<Integer> front=q.poll(); 
			 length--;
			 for(int i=0; i<front.children.size(); i++){
				 TreeNode<Integer>child=front.children.get(i);
				 System.out.print(child.data+" ");
				 q.add(child);
			 }
			 if(length==0){
				 length=q.size();
			 System.out.println();
			 }
	  }

	}	
}


